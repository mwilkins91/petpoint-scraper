# coding: utf-8

"""
    The Enrichment List

    The THS enrichment list  # noqa: E501

    OpenAPI spec version: 1.0.0
    Contact: contactme@markwilkins.co
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six


class AnimalPatchRequestBody(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'updates': 'AnimalPartial',
        'where': 'QueryableAnimal'
    }

    attribute_map = {
        'updates': 'updates',
        'where': 'where'
    }

    def __init__(self, updates=None, where=None):  # noqa: E501
        """AnimalPatchRequestBody - a model defined in Swagger"""  # noqa: E501
        self._updates = None
        self._where = None
        self.discriminator = None
        if updates is not None:
            self.updates = updates
        if where is not None:
            self.where = where

    @property
    def updates(self):
        """Gets the updates of this AnimalPatchRequestBody.  # noqa: E501


        :return: The updates of this AnimalPatchRequestBody.  # noqa: E501
        :rtype: AnimalPartial
        """
        return self._updates

    @updates.setter
    def updates(self, updates):
        """Sets the updates of this AnimalPatchRequestBody.


        :param updates: The updates of this AnimalPatchRequestBody.  # noqa: E501
        :type: AnimalPartial
        """

        self._updates = updates

    @property
    def where(self):
        """Gets the where of this AnimalPatchRequestBody.  # noqa: E501


        :return: The where of this AnimalPatchRequestBody.  # noqa: E501
        :rtype: QueryableAnimal
        """
        return self._where

    @where.setter
    def where(self, where):
        """Sets the where of this AnimalPatchRequestBody.


        :param where: The where of this AnimalPatchRequestBody.  # noqa: E501
        :type: QueryableAnimal
        """

        self._where = where

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(AnimalPatchRequestBody, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, AnimalPatchRequestBody):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
